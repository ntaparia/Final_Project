{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-dom';\nimport { depositCash, withdrawCash } from '../actions';\nconst DEFAULT_STATE = [{\n  _id: 1,\n  name: \"Lannisters\",\n  balance: 1189.78\n}, {\n  _id: 2,\n  name: \"Starks\",\n  balance: 567.71\n}, {\n  _id: 3,\n  name: \"Baratheons\",\n  balance: 31.26\n}, {\n  _id: 4,\n  name: \"Targaryens\",\n  balance: 34.75\n}, {\n  _id: 5,\n  name: \"Greyjoys\",\n  balance: 9.03\n}, {\n  _id: 6,\n  name: \"Tyrells\",\n  balance: 1133.45\n}, {\n  _id: 7,\n  name: \"Martells\",\n  balance: 737.9\n}, {\n  _id: 8,\n  name: \"Tullys\",\n  balance: 483.56\n}, {\n  _id: 9,\n  name: \"Arryns\",\n  balance: 1035.83\n}, {\n  _id: 10,\n  name: \"Free Folk\",\n  balance: -134.34\n}];\n\nconst accountsReducer = (state = DEFAULT_STATE, action) => {\n  let updateState = [...state]; //reducer must return a new array/object\n\n  let accountId;\n  let accBalance;\n  let depAmount;\n  let witAmount; //opening payload box contents\n  //if there is an action, extract account id associated with account\n  //if(action.payload.accountid){accountId = state.findIndex(account => account._id === action.payload.accountid);}\n  //if there is an action done by user and information being received\n\n  if (action && action.payload) {\n    accountId = state.findIndex(account => account.id === action.payload.accountid);\n  }\n\n  if (action.type === \"DEPOSIT_CASH\") {\n    depAmount = action.payload.amount;\n    accountId = action.payload.accountid;\n    accBalance = action.payload.balance;\n    const accountIndex = updateState.findIndex(acc => acc._id === accountId);\n    updateState[accountIndex].balance += parseInt(depAmount);\n    return updateState;\n  } else if (action.type === \"WITHDRAW_CASH\") {\n    witAmount = action.payload.amount;\n    accountId = action.payload.accountid;\n    accBalance = action.payload.balance;\n    const accountIndex = updateState.findIndex(acc => acc._id === accountId);\n    updateState[accountIndex].balance -= parseInt(witAmount);\n    return updateState;\n  } else if (action.type === \"ADD_ACCOUNT\") {\n    return [...state, {\n      _id: state.length + 1,\n      name: action.payload.name,\n      balance: 0.00\n    } //balance: action.payload.balance\n    ];\n  } else if (action.type === \"START_BALANCE\") {\n    accountId = state.findIndex(account => account.id === action.payload.accountid);\n    updateState[accountId].balance += action.payload.amount;\n    return updateState;\n  } else if (action.type === \"DELETE_ACCOUNT\") {\n    updateState.splice(accountId, 1);\n    return updateState;\n  } else return state;\n};\n\nexport default accountsReducer;","map":{"version":3,"sources":["/Users/saanikajoshi/IS 322/Final_Project/src/reducers/accountsReducer.js"],"names":["React","connect","depositCash","withdrawCash","DEFAULT_STATE","_id","name","balance","accountsReducer","state","action","updateState","accountId","accBalance","depAmount","witAmount","payload","findIndex","account","id","accountid","type","amount","accountIndex","acc","parseInt","length","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-dom';\r\nimport { depositCash, withdrawCash } from '../actions';\r\n\r\nconst DEFAULT_STATE = [\r\n    { _id: 1, name: \"Lannisters\", balance: 1189.78 },\r\n    { _id: 2, name: \"Starks\", balance: 567.71 },\r\n    { _id: 3, name: \"Baratheons\", balance: 31.26 },\r\n    { _id: 4, name: \"Targaryens\", balance: 34.75 },\r\n    { _id: 5, name: \"Greyjoys\", balance: 9.03 },\r\n    { _id: 6, name: \"Tyrells\", balance: 1133.45 },\r\n    { _id: 7, name: \"Martells\", balance: 737.9 },\r\n    { _id: 8, name: \"Tullys\", balance: 483.56 },\r\n    { _id: 9, name: \"Arryns\", balance: 1035.83 },\r\n    { _id: 10, name: \"Free Folk\", balance: -134.34 }\r\n];\r\n\r\n\r\nconst accountsReducer = (state = DEFAULT_STATE , action) =>{\r\n    let updateState = [...state];                        //reducer must return a new array/object\r\n    let accountId;\r\n    let accBalance;\r\n    let depAmount;\r\n    let witAmount;\r\n\r\n    //opening payload box contents\r\n    //if there is an action, extract account id associated with account\r\n    //if(action.payload.accountid){accountId = state.findIndex(account => account._id === action.payload.accountid);}\r\n\r\n\r\n    //if there is an action done by user and information being received\r\n    if(action && action.payload){accountId = state.findIndex(account => account.id === action.payload.accountid);}\r\n\r\n\r\n    if(action.type === \"DEPOSIT_CASH\") {\r\n        depAmount = action.payload.amount;\r\n        accountId = action.payload.accountid;\r\n        accBalance = action.payload.balance ;\r\n\r\n        const accountIndex = updateState.findIndex(acc => acc._id === accountId);\r\n        updateState[accountIndex].balance += parseInt(depAmount);\r\n        return updateState;\r\n    }\r\n\r\n    else if(action.type === \"WITHDRAW_CASH\") {\r\n        witAmount = action.payload.amount;\r\n        accountId = action.payload.accountid;\r\n        accBalance = action.payload.balance;\r\n\r\n        const accountIndex = updateState.findIndex( acc => acc._id === accountId);\r\n        updateState[accountIndex].balance -= parseInt(witAmount);\r\n        return updateState;\r\n    }\r\n\r\n\r\n    else if(action.type === \"ADD_ACCOUNT\"){\r\n        return [\r\n            ...state,\r\n            { _id: state.length + 1, name: action.payload.name, balance: 0.00 }   //balance: action.payload.balance\r\n        ];\r\n    }\r\n\r\n    else if(action.type === \"START_BALANCE\") {\r\n        accountId = state.findIndex(account => account.id === action.payload.accountid);\r\n        updateState[accountId].balance += action.payload.amount;\r\n        return updateState;\r\n    }\r\n\r\n    else if(action.type === \"DELETE_ACCOUNT\"){\r\n        updateState.splice(accountId, 1);\r\n        return updateState;\r\n    }\r\n\r\n    else\r\n        return state\r\n\r\n};\r\n\r\nexport default accountsReducer;\r\n"]},"metadata":{},"sourceType":"module"}