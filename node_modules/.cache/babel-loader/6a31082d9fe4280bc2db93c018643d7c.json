{"ast":null,"code":"var _jsxFileName = \"/Users/saanikajoshi/IS 322/Final_Project/src/components/App.js\";\n//App.js will have react-router\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport PageTabs from './PageTabs';\nimport VariablePage from \"./VariablePage\";\nimport { setAccounts, setTransactions, tasksError } from \"../actions\";\nimport Page1 from './Page1';\nimport Page2 from './Page2';\nimport Page3 from './Page3';\nimport AccountsList from './AccountsList';\nimport AddAccount from './AddAccount';\nimport TransactFormatPage from './TransactFormatPage';\nimport TransactList from './TransactList';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      view: {\n        AccountsList\n      },\n      allAccounts: [],\n      sortedTransactions: {\n        name: [],\n        amounts: []\n      },\n      sortedAccounts: {\n        name: [],\n        balance: []\n      },\n      errorText: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getData(); //if made into a functional component, then able to use react router\n  }\n\n  getData() {\n    axios.get('https://my-json-server.typicode.com/bnissen24/project2DB/accounts').then(response => {\n      this.props.setAccounts(response.data);\n    }).catch(error => {\n      this.props.tasksError();\n    });\n    axios.get('https://my-json-server.typicode.com/bnissen24/project2DB/transactions').then(response => {\n      this.props.setTransactions(response.data);\n    }).catch(error => {\n      this.props.tasksError();\n    });\n  }\n  /****\n   sortAccounts(_id)       //sort by Account name\n   {\n  }\n   *****/\n  //something nicely is cooking and sizzling here\n\n  /****\n   sortTransactions(accountId)   //sort by id & name\n   {\n       transaction = accountId.filter( transacid => transacid === <VariablePage/>>)\n   }\n   ****/\n\n\n  render() {\n    const {\n      view\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PageTabs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: AccountsList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/page2\",\n      component: TransactList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/page3\",\n      component: AddAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/page/:id\",\n      component: VariablePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //what gets mapped here will be returned to the properties of the component\n  return {\n    errorMessage: state.errors.getAccounts //had get Tasks\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setAccounts,\n  setTransactions,\n  tasksError\n})(App);","map":{"version":3,"sources":["/Users/saanikajoshi/IS 322/Final_Project/src/components/App.js"],"names":["React","axios","connect","BrowserRouter","Route","PageTabs","VariablePage","setAccounts","setTransactions","tasksError","Page1","Page2","Page3","AccountsList","AddAccount","TransactFormatPage","TransactList","App","Component","state","view","allAccounts","sortedTransactions","name","amounts","sortedAccounts","balance","errorText","componentDidMount","getData","get","then","response","props","data","catch","error","render","mapStateToProps","errorMessage","errors","getAccounts"],"mappings":"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","sourcesContent":["//App.js will have react-router\n\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport PageTabs from './PageTabs';\nimport VariablePage from \"./VariablePage\";\nimport { setAccounts, setTransactions, tasksError} from \"../actions\";\nimport Page1 from './Page1';\nimport Page2 from './Page2';\nimport Page3 from './Page3';\nimport AccountsList from './AccountsList';\nimport AddAccount from './AddAccount';\nimport TransactFormatPage from './TransactFormatPage';\nimport TransactList from './TransactList';\n\nclass App extends React.Component {             //if made into a class component, then able to  use getData & axios calls\n                                                //but unable to use react router\n    state = {\n        view: {AccountsList},\n        allAccounts: [],\n        sortedTransactions: {\n            name: [],\n            amounts: []\n        },\n        sortedAccounts: {\n            name: [],\n            balance: []\n        },\n        errorText: ''\n    }\n\n    componentDidMount() {\n        this.getData();                         //if made into a functional component, then able to use react router\n    }\n\n\n    getData() {\n        axios.get('https://my-json-server.typicode.com/bnissen24/project2DB/accounts')\n            .then(response => {\n                this.props.setAccounts(response.data);\n            }).catch(error => {\n            this.props.tasksError();\n        });\n\n        axios.get('https://my-json-server.typicode.com/bnissen24/project2DB/transactions')\n            .then(response => {\n                this.props.setTransactions(response.data);\n            }).catch(error => {\n            this.props.tasksError();\n        });\n    }\n\n    /****\n     sortAccounts(_id)       //sort by Account name\n     {\n    }\n     *****/\n    //something nicely is cooking and sizzling here\n    /****\n     sortTransactions(accountId)   //sort by id & name\n     {\n         transaction = accountId.filter( transacid => transacid === <VariablePage/>>)\n     }\n     ****/\n\n    render(){\n        const {view} = this.state;\n\n        return (\n            <div>\n                <BrowserRouter>\n                    <PageTabs/>\n                    <div>\n\n                        <Route path=\"/\" exact component={AccountsList}/>\n                        <Route path=\"/page2\" component={TransactList}/>\n                        <Route path=\"/page3\" component={AddAccount}/>\n                        <Route path=\"/page/:id\" component={VariablePage}/>\n                    </div>\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {                    //what gets mapped here will be returned to the properties of the component\n    return {\n        errorMessage: state.errors.getAccounts//had get Tasks\n    };\n}\n\n\nexport default connect(mapStateToProps, {setAccounts, setTransactions, tasksError})(App);\n"]},"metadata":{},"sourceType":"module"}