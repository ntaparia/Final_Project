{"ast":null,"code":"const accountsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_ACCOUNTS':\n      return action.payload;\n\n    case 'DELETE_ACCOUNT':\n      let accountIndex = state.findIndex(account => account._id == action.payload);\n      state.splice(accountIndex, 1);\n      return state;\n\n    case 'DEPOSIT':\n      let accountIndexDep = state.findIndex(account => account._id == action.payload['accountId']);\n      var newBal = parseFloat(state[accountIndexDep]['balance']) + parseFloat(action.payload['amount']);\n      state[accountIndexDep]['balance'] = newBal.toFixed(2);\n      return state;\n\n    case 'WITHDRAW':\n      let accountIndexWith = state.findIndex(account => account._id == action.payload['accountId']);\n      var newBal2 = parseFloat(state[accountIndexWith]['balance']) - action.payload['amount'];\n      state[accountIndexWith]['balance'] = newBal2.toFixed(2);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default accountsReducer;","map":{"version":3,"names":["accountsReducer","state","action","type","payload","accountIndex","findIndex","account","_id","splice","accountIndexDep","newBal","parseFloat","toFixed","accountIndexWith","newBal2"],"sources":["/Users/saanikajoshi/IS 322/Final_Project/src/reducers/accountsReducer.js"],"sourcesContent":["const accountsReducer = (state = [], action) => {\n  switch (action.type) {\n\n    case 'SET_ACCOUNTS':\n      return action.payload;\n\n    case 'DELETE_ACCOUNT':\n      let accountIndex = state.findIndex(account => account._id == action.payload);\n      state.splice(accountIndex, 1);\n\n      return state;\n\n\n    case 'DEPOSIT':\n      let accountIndexDep = state.findIndex(account => account._id == action.payload['accountId']);\n      var newBal = parseFloat(state[accountIndexDep]['balance']) + parseFloat(action.payload['amount']);\n      state[accountIndexDep]['balance'] = newBal.toFixed(2);\n\n      return state;\n\n    case 'WITHDRAW':\n      let accountIndexWith = state.findIndex(account => account._id == action.payload['accountId']);\n      var newBal2 = parseFloat(state[accountIndexWith]['balance']) - action.payload['amount']\n      state[accountIndexWith]['balance'] = newBal2.toFixed(2);\n\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport default accountsReducer;"],"mappings":"AAAA,MAAMA,eAAe,GAAG,YAAwB;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EAC9C,QAAQA,MAAM,CAACC,IAAf;IAEE,KAAK,cAAL;MACE,OAAOD,MAAM,CAACE,OAAd;;IAEF,KAAK,gBAAL;MACE,IAAIC,YAAY,GAAGJ,KAAK,CAACK,SAAN,CAAgBC,OAAO,IAAIA,OAAO,CAACC,GAAR,IAAeN,MAAM,CAACE,OAAjD,CAAnB;MACAH,KAAK,CAACQ,MAAN,CAAaJ,YAAb,EAA2B,CAA3B;MAEA,OAAOJ,KAAP;;IAGF,KAAK,SAAL;MACE,IAAIS,eAAe,GAAGT,KAAK,CAACK,SAAN,CAAgBC,OAAO,IAAIA,OAAO,CAACC,GAAR,IAAeN,MAAM,CAACE,OAAP,CAAe,WAAf,CAA1C,CAAtB;MACA,IAAIO,MAAM,GAAGC,UAAU,CAACX,KAAK,CAACS,eAAD,CAAL,CAAuB,SAAvB,CAAD,CAAV,GAAgDE,UAAU,CAACV,MAAM,CAACE,OAAP,CAAe,QAAf,CAAD,CAAvE;MACAH,KAAK,CAACS,eAAD,CAAL,CAAuB,SAAvB,IAAoCC,MAAM,CAACE,OAAP,CAAe,CAAf,CAApC;MAEA,OAAOZ,KAAP;;IAEF,KAAK,UAAL;MACE,IAAIa,gBAAgB,GAAGb,KAAK,CAACK,SAAN,CAAgBC,OAAO,IAAIA,OAAO,CAACC,GAAR,IAAeN,MAAM,CAACE,OAAP,CAAe,WAAf,CAA1C,CAAvB;MACA,IAAIW,OAAO,GAAGH,UAAU,CAACX,KAAK,CAACa,gBAAD,CAAL,CAAwB,SAAxB,CAAD,CAAV,GAAiDZ,MAAM,CAACE,OAAP,CAAe,QAAf,CAA/D;MACAH,KAAK,CAACa,gBAAD,CAAL,CAAwB,SAAxB,IAAqCC,OAAO,CAACF,OAAR,CAAgB,CAAhB,CAArC;MAEA,OAAOZ,KAAP;;IAEF;MACE,OAAOA,KAAP;EA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}